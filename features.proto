syntax = "proto3";

package features;

import "google/protobuf/empty.proto";

option go_package = "github.com/genmcp/grpc-demo/pkg";

// FeatureService provides access to the feature request data.
service FeatureService {
  // Get all features (summaries only, sorted by upvotes)
  rpc ListFeatures(google.protobuf.Empty) returns (ListFeaturesResponse) {}
  // Get the highest-voted feature (summary only)
  rpc GetTopFeature(google.protobuf.Empty) returns (FeatureSummary) {}
  // Get detailed information about a specific feature
  rpc GetFeature(GetFeatureRequest) returns (Feature) {}
  // Add a new feature request
  rpc AddFeature(AddFeatureRequest) returns (Feature) {}
  // Vote for a feature (increases upvotes)
  rpc VoteFeature(VoteFeatureRequest) returns (Feature) {}
  // Mark a feature request as completed
  rpc CompleteFeature(CompleteFeatureRequest) returns (Feature) {}
  // Delete a feature request
  rpc DeleteFeature(DeleteFeatureRequest) returns (google.protobuf.Empty) {}
}

// Represents a detailed feature.
message Feature {
  int32 id = 1;
  string title = 2;
  string description = 3;
  string details = 4;
  int32 upvotes = 5;
  bool completed = 6;
}

// Represents a summary of a feature.
message FeatureSummary {
  int32 id = 1;
  string title = 2;
  int32 upvotes = 3;
  bool completed = 4;
}

// Request to get a single feature.
message GetFeatureRequest {
  int32 id = 1;
}

// Request to add a new feature.
message AddFeatureRequest {
  string title = 1;
  string description = 2;
  string details = 3;
}

// Request to vote for a feature.
message VoteFeatureRequest {
  int32 feature_id = 1;
}

// Request to mark a feature as complete.
message CompleteFeatureRequest {
  int32 feature_id = 1;
}

// Request to delete a feature.
message DeleteFeatureRequest {
  int32 id = 1;
}

// Response for ListFeatures RPC.
message ListFeaturesResponse {
  repeated FeatureSummary summaries = 1;
}
