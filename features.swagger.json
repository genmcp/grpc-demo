{
  "swagger": "2.0",
  "info": {
    "title": "features.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "FeatureService"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/features": {
      "get": {
        "summary": "Get all features (summaries only, sorted by upvotes)",
        "operationId": "FeatureService_ListFeatures",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/featuresListFeaturesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "FeatureService"
        ]
      },
      "post": {
        "summary": "Add a new feature request",
        "operationId": "FeatureService_AddFeature",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/featuresFeature"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "description": "Request to add a new feature.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/featuresAddFeatureRequest"
            }
          }
        ],
        "tags": [
          "FeatureService"
        ]
      }
    },
    "/features/complete": {
      "post": {
        "summary": "Mark a feature request as completed",
        "operationId": "FeatureService_CompleteFeature",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/featuresFeature"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "description": "Request to mark a feature as complete.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/featuresCompleteFeatureRequest"
            }
          }
        ],
        "tags": [
          "FeatureService"
        ]
      }
    },
    "/features/vote": {
      "post": {
        "summary": "Vote for a feature (increases upvotes)",
        "operationId": "FeatureService_VoteFeature",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/featuresFeature"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "description": "Request to vote for a feature.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/featuresVoteFeatureRequest"
            }
          }
        ],
        "tags": [
          "FeatureService"
        ]
      }
    },
    "/features/{id}": {
      "get": {
        "summary": "Get detailed information about a specific feature",
        "operationId": "FeatureService_GetFeature",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/featuresFeature"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "FeatureService"
        ]
      },
      "delete": {
        "summary": "Delete a feature request",
        "operationId": "FeatureService_DeleteFeature",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "FeatureService"
        ]
      }
    },
    "/top_feature": {
      "get": {
        "summary": "Get the highest-voted feature (summary only)",
        "operationId": "FeatureService_GetTopFeature",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/featuresFeatureSummary"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "FeatureService"
        ]
      }
    }
  },
  "definitions": {
    "featuresAddFeatureRequest": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "details": {
          "type": "string"
        }
      },
      "description": "Request to add a new feature."
    },
    "featuresCompleteFeatureRequest": {
      "type": "object",
      "properties": {
        "featureId": {
          "type": "integer",
          "format": "int32"
        }
      },
      "description": "Request to mark a feature as complete."
    },
    "featuresFeature": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "title": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "details": {
          "type": "string"
        },
        "upvotes": {
          "type": "integer",
          "format": "int32"
        },
        "completed": {
          "type": "boolean"
        }
      },
      "description": "Represents a detailed feature."
    },
    "featuresFeatureSummary": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "title": {
          "type": "string"
        },
        "upvotes": {
          "type": "integer",
          "format": "int32"
        },
        "completed": {
          "type": "boolean"
        }
      },
      "description": "Represents a summary of a feature."
    },
    "featuresListFeaturesResponse": {
      "type": "object",
      "properties": {
        "summaries": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/featuresFeatureSummary"
          }
        }
      },
      "description": "Response for ListFeatures RPC."
    },
    "featuresVoteFeatureRequest": {
      "type": "object",
      "properties": {
        "featureId": {
          "type": "integer",
          "format": "int32"
        }
      },
      "description": "Request to vote for a feature."
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    }
  }
}
